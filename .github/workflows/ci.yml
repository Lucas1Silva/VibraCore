name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Instala as dependências de dev e de produção
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format with Black
      run: |
        black --check .

    - name: Test with pytest
      run: |
        pytest

  # --- JOB CORRIGIDO ---
  # Agora ele constrói as duas imagens Docker
  docker-build-services:
    runs-on: ubuntu-latest
    needs: build # Garante que este job só rode se o 'build' passar
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build product-service image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Caminho corrigido para o Dockerfile do product-service
          file: ./services/product_service/Dockerfile
          push: false
          tags: vibracore/product-service:latest

      - name: Build review-service image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Caminho corrigido para o Dockerfile do review-service
          file: ./services/review_service/Dockerfile
          push: false
          tags: vibracore/review-service:latest